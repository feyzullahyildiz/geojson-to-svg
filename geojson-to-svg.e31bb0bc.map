{"version":3,"sources":["index.js"],"names":["cities","require","centroids","container","document","querySelector","pointArray","index","features","feature","code","properties","ILKOD","geometry","coordinates","x","y","parseInt","polygon","points","_x","_y","svg","innerHTML","citiesPolygons","querySelectorAll","onEnter","forEach","style","fill","onLeave","city","addEventListener"],"mappingscAAD,CAAtB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,mBAAD,CAAzB;;AACA,IAAME,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAlB,EAEA;;AAEA,IAAIC,UAAU,GAAG,EAAjB;;AACA,KAAI,IAAMC,KAAV,IAAmBP,MAAM,CAACQ,QAA1B,EAAmC;AAC/B,MAAMC,OAAO,GAAGT,MAAM,CAACQ,QAAP,CAAgBD,KAAhB,CAAhB;AACA,MAAMG,IAAI,GAAGR,SAAS,CAACM,QAAV,CAAmBD,KAAnB,EAA0BI,UAA1B,CAAqCC,KAAlD;;AAF+B,6CAGlBV,SAAS,CAACM,QAAV,CAAmBD,KAAnB,EAA0BM,QAA1B,CAAmCC,WAHjB;AAAA,MAG1BC,CAH0B;AAAA,MAGvBC,CAHuB;;AAI/BD,EAAAA,CAAC,GAAGE,QAAQ,CAAEF,CAAC,GAAC,IAAH,GAAW,IAAZ,CAAZ;AACAC,EAAAA,CAAC,GAAGC,QAAQ,CAAC,OAAOD,CAAC,GAAC,IAAV,CAAZ;AACAV,EAAAA,UAAU,SAAV;AAN+B;AAAA;AAAA;;AAAA;AAO/B,yBAAsBG,OAAO,CAACI,QAAR,CAAiBC,WAAvC,8HAAoD;AAAA,UAAzCI,OAAyC;AAChD,UAAIC,MAAM,GAAG,EAAb;AADgD;AAAA;AAAA;;AAAA;AAEhD,8BAAuBD,OAAO,CAAC,CAAD,CAA9B,mIAAmC;AAAA;AAAA,cAAvBE,EAAuB;AAAA,cAAnBC,EAAmB;;AAC/BF,UAAAA,MAAM,cAAOF,QAAQ,CAAEG,EAAE,GAAC,IAAJ,GAAY,IAAb,CAAf,cAAqCH,QAAQ,CAAC,OAAQI,EAAE,GAAC,IAAZ,CAA7C,MAAN;AACH;AAJ+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKhDf,MAAAA,UAAU,gCAAuBa,MAAvB,SAAV;AACH;AAb8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAc/Bb,EAAAA,UAAU,8BACCS,CADD,oBACUC,CADV,uEAEwBN,IAFxB,oCAAV;AAKH;;AACD,IAAIY,GAAG,8DAELhB,UAFK,eAAP;AAKAH,SAAS,CAACoB,SAAV,GAAsBD,GAAtB;AAGA,IAAME,cAAc,GAAGrB,SAAS,CAACsB,gBAAV,CAA2B,OAA3B,CAAvB;;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAU;AACtB,OAAKD,gBAAL,CAAsB,SAAtB,EAAiCE,OAAjC,CAAyC,UAAAT,OAAO,EAAI;AAChDA,IAAAA,OAAO,CAACU,KAAR,CAAcC,IAAd,GAAqB,KAArB;AACH,GAFD;AAGH,CAJD;;AAKA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAU;AACtB,OAAKL,gBAAL,CAAsB,SAAtB,EAAiCE,OAAjC,CAAyC,UAAAT,OAAO,EAAI;AAChDA,IAAAA,OAAO,CAACU,KAAR,CAAcC,IAAd,GAAqB,EAArB;AACH,GAFD;AAIH,CALD;;AAMAL,cAAc,CAACG,OAAf,CAAuB,UAAAI,IAAI,EAAI;AAC3BA,EAAAA,IAAI,CAACC,gBAAL,CAAsB,WAAtB,EAAmCN,OAAnC;AACAK,EAAAA,IAAI,CAACC,gBAAL,CAAsB,YAAtB,EAAoCF,OAApC;AACH,CAHD","file":"geojson-to-svg.e31bb0bc.map","sourceRoot":"..","sourcesContent":["const cities = require('./iller.json')\nconst centroids = require('./iller-orta.json')\nconst container = document.querySelector('.container')\n\n// [ 2857405, 4275017 ], [ 2857405, 5175729 ], [ 4989109, 5175729 ], [ 4989109, 4275017 ], [ 2857405, 4275017 ] //bbox\n\nlet pointArray = ''\nfor(const index in cities.features){\n    const feature = cities.features[index]\n    const code = centroids.features[index].properties.ILKOD\n    let [x, y] = centroids.features[index].geometry.coordinates\n    x = parseInt((x/2000) - 1350)\n    y = parseInt(2600- (y/2000))\n    pointArray += `<g>`\n    for (const polygon of feature.geometry.coordinates) {\n        let points = ''\n        for (const [_x, _y] of polygon[0]) {\n            points += `${parseInt((_x/2000) - 1350)},${parseInt(2600 - (_y/2000))} `\n        }\n        pointArray +=`<polygon points=\"${points}\"/>`\n    }\n    pointArray += `\n    <text x=\"${x}\" y=\"${y}\" fill=\"white\">\n        <tspan text-anchor=\"middle\">${code}</tspan>\n    </text>\n    </g>`\n}\nlet svg = `\n<svg viewBox=\"0 0 1200 500\" width=\"100%\">\n${pointArray}\n</svg>\n`\ncontainer.innerHTML = svg\n\n\nconst citiesPolygons = container.querySelectorAll('svg g')\nconst onEnter = function(){\n    this.querySelectorAll('polygon').forEach(polygon => {\n        polygon.style.fill = 'red'\n    })\n}\nconst onLeave = function(){\n    this.querySelectorAll('polygon').forEach(polygon => {\n        polygon.style.fill = ''\n    })\n\n}\ncitiesPolygons.forEach(city => {\n    city.addEventListener('mouseover', onEnter)\n    city.addEventListener('mouseleave', onLeave)\n})"]}